html01

html就是记住一些常用的标签，及其属性。

常用的标签大概20个。
超链接 a
表格 table 
列表 ol ul 
表单 form

分隔 div span p


========================================
html资源
----------------------------------------
https://www.w3school.com.cn/html/html_basic.asp



========================================
a标签：超链接、按钮
----------------------------------------
A标签有2个属性: 
- href 指定要跳转的链接
- target 指定新链接打开的位置，默认不填写是在原窗口打开，_blank是在新窗口打开。

1.例子
<a href="http://etax.shenzhen.chinatax.gov.cn/login-web/login" target=_blank>国家税务总局深圳市电子税务局</a> | 
<a href="https://www.w3school.com.cn/html/html_basic.asp" target=_blank>html标签</a> | 




2.target还可以是iframe的name属性
百度翻译 https://fanyi.baidu.com/#en/zh/eclipse

例
<h1>wordKing 单词王</h1>

<iframe name="box" style="width:70%;height:100%; position:fixed; right:0;top:0;"></iframe>

<a target="box" href="https://fanyi.baidu.com/#en/zh/eclipse">eclipse</a><br>
<a target="box" href="https://fanyi.baidu.com/#en/zh/territory">territory</a><br>
<a target="box" href="https://fanyi.baidu.com/#en/zh/ethics">ethics</a><br>




========================================
p标签 段落，行间
----------------------------------------




========================================
表单(form, input)：向后台提交数据
----------------------------------------
可以测试登录的文件格式：
|-form.html
|-back.py


1.前台 form.html
<meta http-equiv="content-type" content="text/html;charset=utf-8">

<style>
body{background:#aaa;}

.content{
	width:600px;
	margin:10px auto;
	
	padding:20px;
	
	background:#fff;
	border:10px solid #f00;
	/*
	*/
}
/*
.content form{
	color:#fff;
	background:red;
}
*/

</style>


<div class="content">
	<h1>请登录xx市财务xx系统</h1>
	<form action="/" method="post">
		用户名
		<input type="input" name="username"><br>
		密码
		<input type="input" name="password"><br>
		<input type="submit" value="登录">
	</form>
</div>

<div class=content>
	Copy right 2019 xx公司
</div>



2. 后台接收post请求的py程序
#!/usr/bin/python
# -*- coding: UTF-8 -*-

from flask import Flask,request
app = Flask(__name__)

@app.route('/', methods=['GET','POST'])
def hello_world():
	if request.method == 'POST':
		usr=request.form['username'];
		psw=request.form['password'];
		return 'Welcome user log in! \
		<a style="color:red;" target="_blank" href="/"> 退出(LogOut) </a> \
		<br>usr:%s \
		<br>psw:%s\n'%(usr, psw);
	fr=open('form.html','r',encoding="utf8");
	html=fr.read();
	return html

if __name__ == '__main__':
	app.run(host="127.0.0.1", debug=True, port=80)




========================================
span：行内，划定范围
----------------------------------------
<span>一个</span>段落

还是占一行，就像没加span一样。

但是span圈定的范围，很适合css设置样式。



========================================
div：行间，划定范围
----------------------------------------

<div>一个</div>段落
会显示2行。也就是div标签倾向于独占一行，哪怕该行后面还有大片空间。

适合划定范围，用css来设置样式。

========================================
表格(table/tr/td/th/caption): 显示数据、过去用来布局
----------------------------------------
tr用于一行的标记。
|-td用于行内一格；第一行表头时，使用th有自动加粗、居中效果。
|---- colspan=2 属性，指定占2列。同理 rowspan=3就是占3行。相当于excel的合并单元格。
|-caption 设置表格标题，自动居中。

例：
<table border="1" cellspacing="0">
	<caption>表1 xx列表</caption>
	<tr>
		<th>语言</th>
		<th>作用</th>
		<th>前置知识</th>
	</tr>
	<tr>
		<td>html</td>
		<td>整体结构</td>
		<td>认字</td>
	</tr>
	<tr>
		<td>css</td>
		<td>设置样式: 字体、颜色、大小等</td>
		<td>html</td>
	</tr>
	<tr>
		<td>JavaScript</td>
		<td>动作：弹出层、元素移动位置、拖动、滚动等</td>
		<td>html, css</td>
	</tr>
	<tr>
		<td>小结</td>
		<td colspan=2>接着就可以看各种web框架了，如jQery, underscore,Vue.js,Angular等</td>
	</tr>
</table>



2. 显示table的最快的方式是使用js数组产生dom标签，然后使用arr.join('')后插入到原文obj.innerHTML中。

到js中再讲。



========================================
列表(ul/ol/li): ul无序列表，ol有序列表，常用来显示一列很相似的元素、横纵菜单
----------------------------------------
1.无序列表
<h4>一个无序列表：</h4>
<ul>
  <li>咖啡</li>
  <li>茶</li>
  <li>牛奶</li>
  <li>豆浆</li>
</ul>


2.有序列表
<h4>一个有序列表：</h4>
<ol>
  <li>咖啡</li>
  <li>茶</li>
  <li>牛奶</li>
  <li>豆浆</li>
</ol>

========================================
b加粗，i斜体
----------------------------------------
<span>一个</span>单<b>独<i>的</i></b>行。


========================================
图片: img标签，src属性是路径
----------------------------------------




========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------

