Vue可以用于写前端页面，后端怎么配合？

前置知识：html/css/js


========================================
简介Vue.js
----------------------------------------

1.简介
https://cn.vuejs.org/
渐进式JavaScript 框架


<meta charset="UTF-8">

<!-- 开发环境版本，包含了有帮助的命令行警告 
<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
-->
<script src="/static/js/vue.js"></script>

<div id="app">
  {{ message + name }}
</div>


<script>
var app=new Vue({
	'el':"#app",
	data:{ //直接绑定到vue对象了
		message:"hello, ",
		name:"Vue.js2"
	}
})
</script>

</script>



2.教程
https://www.runoob.com/vue2/vue-tutorial.html

Vue 进阶系列之响应式原理及实现
https://www.imooc.com/article/291853?block_id=tuijian_wz



========================================
前置知识和Vue要点
----------------------------------------
ES6, webpack, vue, vuex

指令
双向数据绑定
组件、组建的通信
路由和请求
生命周期
========================================
v-model, v-if, v-show
----------------------------------------
v-model="name" 绑定值; 
是否显示 
	v-show='age'(display:none) 
	或 v-if='sex';(直接删除dom)

<meta charset="UTF-8">

<!-- 开发环境版本，包含了有帮助的命令行警告 
<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
-->
<script src="/static/js/vue.js"></script>

<div id="app">
  <div>
	<input type="text" v-model="name">
	<span>名字: {{name}}</span>
  </div>
  <div>
	<input type="text" v-model="age">
	<span v-show='age'>年龄: {{age}}</span>
  </div>
  <div>
	<input type="text" v-model="sex">
	<span v-if='sex'>性别: {{sex}}</span>
  </div>

</div>


<script>
var app=new Vue({
	el:"#app",
	data:{ //直接绑定到vue对象了
		message:"hello, ",
		name:"Vue.js2",
		age:"2",
		sex:"M",
	}
})
</script>




========================================
v-for
----------------------------------------
<meta charset="UTF-8">

<!-- 开发环境版本，包含了有帮助的命令行警告 
<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
-->
<script src="/static/js/vue.js"></script>

<div id="app">
<h1>{{ name }}</h1>
	<ol>
		<li v-for="food in foodList">{{food}}</li>
	</ol>
	
	<ul>
		<li v-for="food in foodList2">{{food.name}}: ￥<del>{{food.price}}</del> ￥{{food.discount?food.price * food.discount:food.price}}</li>
	</ul>
</div>
在F12控制台，改变数据会立刻更新dom视图:<br>
app.foodList2.push({name:"猪肉", price:50, discount:0.99}) 

<script>
var app=new Vue({
	el:'#app',
	data:{
		name:'Vue v-for 杂货店',
		foodList:['葱','姜','蒜'],//str数组，信息不够丰富
		foodList2:[//obj数组，信息更多
			{
				name:"葱",
				price:10,
				discount:0.8
			},
			{
				name:"姜",
				price:30,
				discount:0.5
			},
			{
				name:"蒜",
				price:15,
				discount:0.3
			},
			{
				name:"鸡蛋",
				price:20,
				//不打折，怎么设置默认值？防止出错NaN
				//div中使用三元运算符 x?a:b;
			},
			
			
		]
	}
})
</script>




========================================
v-on 绑定事件: 简写做 @
----------------------------------------
v-on:click="fnInJS"; 简写做 @:click="fnInJS";

写多个动作v-on="{mouseenter:onEnter, mouseleave:onOut}";


v-on:submit="onSubmit;
v-on:submit.stop="onSubmit;
v-on:submit.prevent="onSubmit;
v-on:submit="onSubmit($event); 
v-on:submit.prevent="onSubmit($event)




实例：
<meta charset="UTF-8">

<!-- 开发环境版本，包含了有帮助的命令行警告 
<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
-->
<script src="/static/js/vue.js"></script>

<style>
.top_title{color:white; background:#ddd; padding:5px 10px;}
.active{color:red;}
</style>


<div id="app">
	<h1 :class="a_class" @click='changeColor'>{{ name }}</h1>	
	<a v-on="{mouseenter:onEnter, mouseleave:onOut}" v-bind:class="{active:isActive}" v-bind:href="url">link</a>
	<br>
	<button v-on:click="changeColor">改变颜色 click me</button>
	
	
	<hr>
	<form @keyUp="onKeyUp" v-on:submit.prevent="onSubmit">
		用户名 <input id="focus" v-on:keyUp.enter="onPressEnter" type="text" name="username"> <br>
		密码 <input type="password" name="pass"> <br>
		<input type="submit" value="提交">
	</form>
</div>
<hr>


<script>
var app=new Vue({
	el:'#app',
	data:{
		name:'v-on',
		url:"https://baidu.com",
		a_class:'top_title',
		isActive:true,
	},
	methods:{
		changeColor:function(){
			this.isActive=!this.isActive
		},
		
		onEnter:function(){
			console.log("enter")
		},
		onOut:function(){
			console.log("out")
		},
		onSubmit:function(e){
			//e.preventDefault();
			console.log('submit e=',e)
			return false;
		},
		onKeyUp:function(e){
			console.log('keyup presssed=', e.key, e);
		},
		onPressEnter:function(e){ //只响应键盘的 enter 键
			console.log(">>enter pressed: e=",e.key, e)
		},
		
		onLoad:function(e){
			console.log("load now", e)
		}
	}
})

window.onload=function(){
	document.getElementById("focus").focus()
}
</script>






========================================
v-model 模型及其修饰符
----------------------------------------



todo
https://study.163.com/course/courseLearn.htm?courseId=1004181065#/learn/video?lessonId=1048300109&courseId=1004181065



========================================
webpack
----------------------------------------
(angular)前端内容的自动化构建 https://www.imooc.com/learn/922
(node)webpack深入与实战 https://www.imooc.com/learn/802




========================================
vue实例
----------------------------------------
(ES6)使用vue2.0实现购物车和地址选配功能 https://www.imooc.com/learn/796





========================================
Vue.js火速上手
----------------------------------------
https://study.163.com/course/introduction.htm?courseId=1004181065#/courseDetail?tab=1
为什么用Vue？很简单，顺心。 在目前的三大前端框架中（Vue，Angular，React）Vue怕是最好上手的框架了，然而其核心功能和其他两者也竟然不相伯仲，那有什么理由不先学它呢？看不到。 人生如此苦短，Vue会使我们的开发过程变得更像是一种享受。对于中小型项目及个人和小型团队简直是不二之选。

1.简介

前端解析html好还是后端解析html好？
前端好，节省服务器压力。


2. 开始学




















========================================
Vue深入浅出(从入门到开发) 用到 Vue cli
----------------------------------------
https://study.163.com/course/introduction.htm?courseId=1004461012#/courseDetail?tab=1
https://study.163.com/course/introduction.htm?courseId=1004711010#/courseDetail?tab=1
简　　介	整个系列课程带领大家可以快速掌握Vue开发的流程,课程从简单到实战,适用于0基础学习.

Vue-CLI脚手架搭建
Vue-指令
Vue-条件及循环语句
Vue-事件及双向绑定
Vue-模板引擎
Vue-组件
Vue-属性传值
Vue-路由
Vue-资源请求





========================================
撩课-零基础玩转Vue2.x-基础篇
----------------------------------------
https://study.163.com/course/introduction.htm?courseId=1005974007#/courseDetail?tab=1
课程大纲：
1.ES6语法基础，包括let/const、解构赋值、set/map、Symbol、Iterator、Class、继承、综合案例；
2.Vue 2.x语法基础，包括指令、计算属性、set/get、全局组件、父子组件、data、组件间通信、动态绑定、自定义事件、插槽等；
3.Vue 2.x进阶篇，包括Vue-router、命名路由、嵌套路由、京东商城（购物车）实战；


========================================
----------------------------------------



========================================
----------------------------------------



